<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/head %>
  </head>
  <body ng-app='MoviePageModule'>
  	<div class="container">
	  	<header>
	        <% include ../partials/header %>
	    </header>

      <div ng-controller="inputsController">
        <form novalidate>
          <p style="margin-top: 20px"><b>Total Pages = {{totPages}}</b></p>

          <span style="float: left; width: 33%">
            <p><b>Navigate to page number: </b></p>
            <input type="number" ng-model="goToThisPage">
            <input type="button" ng-click="specificPage()" value="GO!">
          </span>

          <span style="float: left; width: 33%">
            <p><b>Search this page: </b></p>
            <input input type="text" ng-model="search.moviesOnCurrentPage">
          </span>
          
          <span style="float: left; width: 33%">
            <p><b>Search full Database: </b></p>
            <input type="text" ng-model="searchText">
            <input type="button" ng-click="searchFullDB()" value="GO!">
          </span>
        </form>
      </div>

      <br>

      <div ng-controller="tableController">
        <table class="table table-striped">
          <thead>
            <tr>
                <th data-field="number" data-halign="left" data-align="right">Number</th>
                <th data-field="name" data-halign="center" data-align="left">Movie Name</th>
                <th data-field="category" data-halign="center" data-align="left">Category</th>
            </tr>
          </thead>
          
          <tbody>
            <tr ng-repeat="x in tableData | filter:searchMoviesOnCurrentPage">
              <td>{{$index+1}}</td>
              <td>{{x.MovieName}}</td>
              <td>{{x.category}}</td>
            </tr>
          </tbody>
          
        </table>
      </div>

      <script>
        
        var MoviePageModule = angular.module('MoviePageModule', []);

        MoviePageModule.factory('sharedDataFactory', function () {
            var data = {
              searchMoviesOnCurrentPage: '',
              tableData: ''
            };
            return {
                getSearchMoviesOnCurrentPage: function () {
                    return data.searchMoviesOnCurrentPage;
                },
                setSearchMoviesOnCurrentPage: function (x) {
                    data.searchMoviesOnCurrentPage = x;
                },
                getTableData: function () {
                    return data.tableData;
                },
                setTableData: function (x) {
                    data.tableData = x;
                }
            };
        });



        MoviePageModule.controller('inputsController', function($scope, $http, sharedDataFactory){
          
          function init(){
            $scope.Math = window.Math;
            $scope.totPages = $scope.Math.ceil(<%=rowCount%>/100);
            sharedDataFactory.setTableData(<%-JSON.stringify(data)%>);
          }

          init();

          $scope.search = {};
          $scope.$watch('search.moviesOnCurrentPage', function(newVal){
            if(newVal){sharedDataFactory.setSearchMoviesOnCurrentPage(newVal);}
          });

          $scope.searchFullDB = function() {
            if(typeof $scope.searchText === 'undefined' || $scope.searchText === ""){}
            else{
              var response = $http.get('/movies/'+$scope.searchText);
              response.success(function(data, status, headers, config) {
                /*$scope.tableData = data.data;*/
                $scope.totPages = $scope.Math.ceil(data.totRows/100);

                sharedDataFactory.setTableData(data.data);
              });
              response.error(function(data, status, headers, config) {
              });
            }
          };


          $scope.specificPage = function() {
            if(typeof $scope.goToThisPage === 'undefined' || $scope.goToThisPage === ""){}
            else{
              if(typeof $scope.searchText === 'undefined' || $scope.searchText === ""){
                var response = $http.get('/movies/secret987asdhfqpw8oapi/'+($scope.goToThisPage-1)*100);
                response.success(function(data, status, headers, config) {
                  /*$scope.tableData = data.data;*/
                  $scope.totPages = $scope.Math.ceil(data.totRows/100);

                  sharedDataFactory.setTableData(data.data);
                });
                response.error(function(data, status, headers, config) {
                });
              }
              else{
                var response = $http.get('/movies/'+$scope.searchText+'/'+($scope.goToThisPage-1)*100);
                response.success(function(data, status, headers, config) {
                  /*$scope.tableData = data.data;*/
                  $scope.totPages = $scope.Math.ceil(data.totRows/100);
                  sharedDataFactory.setTableData(data.data);
                });
                response.error(function(data, status, headers, config) {
                });
              }
            }
          };
        });


        MoviePageModule.controller('tableController', function($scope, $http, sharedDataFactory){

          $scope.$watch(function(){return sharedDataFactory.getTableData();}, function(newVal){
            if(newVal){$scope.tableData = newVal;}
          });

          $scope.$watch(function(){return sharedDataFactory.getSearchMoviesOnCurrentPage();}, function(newVal){
            if(newVal){$scope.searchMoviesOnCurrentPage = newVal;}
          });

        });

        
      </script>
	    
	</div>
  </body>

  <footer>
        <% include ../partials/footer %>
  </footer>
</html>
